name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout files
        uses: actions/checkout@v3

      - name: Run unit tests
        run:
          go test ./...
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout files
        uses: actions/checkout@v3

      - name: Docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run:
          docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
      
      - name: Docker push
        env:
          REPO: golang-college-ec2
        run: |
          docker build -t $REPO .
          docker tag $REPO:latest ${{ secrets.DOCKER_USER }}/$REPO:latest
          docker push ${{ secrets.DOCKER_USER }}/$REPO:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout files
        uses: actions/checkout@v3

      - name: Copy files with SSH
        uses: appleboy/ssh-action@master
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
          DOCKER_PORT: ${{ secrets.DOCKER_PORT }}
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          envs: GITHUB_SHA,DOCKER_USER,DOCKER_PASSWORD,DOCKER_IMAGE,CONTAINER_NAME,CONTAINER_NAME,DOCKER_PORT
          script: |
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
            docker pull $DOCKER_USER/$DOCKER_IMAGE
            docker stop $CONTAINER_NAME
            docker rm $CONTAINER_NAME
            docker run -d --name $CONTAINER_NAME -p $DOCKER_PORT $DOCKER_USER/$DOCKER_IMAGE
 